import React, { useState, useContext } from "react";
import { Link } from "react-router";
import PaymentStyles from "../../assets/css/payment.css";
import { PlanContext } from "../../context";

import sbpLogo from '../../assets/img/sbp-logo.png'
import sberPay from '../../assets/img/SberPay.png'
import SecondImg from '../../assets/img/second.png'

const Payment = () => {
  const [paymentMethod, setPaymentMethod] = useState("card");
  const [cardDetails, setCardDetails] = useState({
    number: "",
    name: "",
    expiry: "",
    cvv: "",
  });

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setCardDetails((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const { planData } = useContext(PlanContext);

  const [activeOption, setActiveOption] = useState(null);

  const handleOptionClick = (option) => {
    setActiveOption(option);
  };

  const [paymentLink, setPaymentLink] = useState('https://www.sberbank.com/promo/sberpay');

  const handlePaymentLink = (link) => {
    setPaymentLink(link);
  };


  return (
    <div className="payment-page">
      <main className="payment-main">
        <div className="container">
          <div className="payment-grid">
            <div className="payment-form">
              <h2>–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>

              <div className="payment-methods">
                <button
                  className={`method ${
                    paymentMethod === "card" ? "active" : ""
                  }`}
                 onClick={() => {
                    setPaymentMethod("card");
                    handlePaymentLink('https://www.sberbank.com/promo/sberpay');
                  }}
                >
                  <span className="icon"><img className="sber-logo" src={sberPay} alt="" /></span>
                  SberPay
                </button>

                <button
                  className={`method ${
                    paymentMethod === "–°–ë–ü" ? "active" : ""
                  }`}
                  onClick={() => {
                    setPaymentMethod("–°–ë–ü");
                    handlePaymentLink('https://sbp.nspk.ru/');
                  }}
                >
                  <span className="icon"><img className="sbp-logo" src={sbpLogo} alt="" /></span>
                  –°–ë–ü
                </button>
                

                <button
                  className={`method ${
                    paymentMethod === "crypto" ? "active" : ""
                  }`}
                 onClick={() => {
                    setPaymentMethod("crypto");
                    handlePaymentLink('https://cryptocloud.plus/crypto-processing');
                  }}
                >
                  <span className="icon">‚Çø</span>
                  –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞
                </button>
              </div>

              

              {paymentMethod === "card" && (
                <div className="alternative-method">
                  <p>
                    –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–û–ø–ª–∞—Ç–∏—Ç—å" –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞
                    —Å—Ç—Ä–∞–Ω–∏—Ü—É <span className="text-green">SberPay</span> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.
                  </p>
                </div>
              )}

              {paymentMethod === "–°–ë–ü" && (
                <div className="alternative-method">
                  <p>
                    –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è "–û–ø–ª–∞—Ç–∏—Ç—å" –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞
                    —Å—Ç—Ä–∞–Ω–∏—Ü—É <span className="text-green">–°–ë–ü</span> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞.
                  </p>
                </div>
              )}

              {paymentMethod === "crypto" && (
                <div className="alternative-method">
                  <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã:</p>
                  <div className="crypto-options">
                    <button
                      className={`crypto-option ${
                        activeOption === "BTC" ? "active" : ""
                      }`}
                      onClick={() => handleOptionClick("BTC")}
                    >
                      Bitcoin (BTC)
                    </button>
                    <button
                      className={`crypto-option ${
                        activeOption === "ETH" ? "active" : ""
                      }`}
                      onClick={() => handleOptionClick("ETH")}
                    >
                      Ethereum (ETH)
                    </button>
                    <button
                      className={`crypto-option ${
                        activeOption === "USDT" ? "active" : ""
                      }`}
                      onClick={() => handleOptionClick("USDT")}
                    >
                      USDT
                    </button>
                  </div>
                </div>
              )}

               <img className='hero-content__second-img' src={SecondImg} alt="" />

              <div className="payment-security">
                <div className="secure-badge">üîí –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞</div>
              </div>
            </div>

            <div className="order-summary">
              <h2>–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞</h2>

              <div className="plan-card selected">
                <h3>{planData.plan}</h3>
                <div className="price">
                  {planData.price}‚ÇΩ{" "}
                  <span>/ {planData.price > 1000 ? "–≥–æ–¥" : "–º–µ—Å—è—Ü"}</span>
                </div>
                <ul className="features">
                  {planData.features.map((item, index) => (
                    <li key={index}>{item}</li>
                  ))}
                </ul>
              </div>

              <div className="order-total">
                <div className="total-row">
                  <span>–°—É–º–º–∞:</span>
                  <span>{planData.price}‚ÇΩ</span>
                </div>
                
                <div className="total-row grand-total">
                  <span>–ò—Ç–æ–≥–æ:</span>
                  <span>{planData.price}‚ÇΩ</span>
                </div>
              </div>

              <Link target="_blank" to={paymentLink} className="pay-button">
                –û–ø–ª–∞—Ç–∏—Ç—å {planData.price}‚ÇΩ
              </Link>

              <div className="guarantee">
                <p>‚úÖ 7-–¥–Ω–µ–≤–Ω–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤</p>
                <p>‚úÖ –ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç</p>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default Payment;
